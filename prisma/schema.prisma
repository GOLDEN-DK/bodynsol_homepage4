// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // Vercel Postgres 연결 URL (pgbouncer 사용)
  directUrl = env("POSTGRES_URL_NON_POOLING") // 마이그레이션을 위한 직접 연결 URL
}

// 관리자 계정 모델
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  role          String    @default("admin")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// 배너 모델
model Banner {
  id            String    @id @default(cuid())
  title         String
  description   String?
  imageUrl      String
  imageWidth    Int
  imageHeight   Int
  link          String?
  isActive      Boolean   @default(true)
  order         Int       @default(0)
  mediaType     String    @default("image") // 'image', 'gif', 'video' 중 하나
  transitionTime Int      @default(5) // 배너 전환 시간(초)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// 교육 과정 모델
model Course {
  id                 String    @id @default(cuid())
  title              String
  slug               String    @unique
  description        String
  content            String    @db.Text
  thumbnailUrl       String
  thumbnailWidth     Int       @default(800)
  thumbnailHeight    Int       @default(600)
  category           String
  instructor         String
  instructorInfo     String?   @db.Text
  instructorImageUrl String?
  schedule           String?
  duration           String?
  location           String?
  maxStudents        Int?
  price              Int?
  discountPrice      Int?
  paymentMethods     String[]  @default([])
  isActive           Boolean   @default(true)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

// 이벤트 모델
model Event {
  id            String    @id @default(cuid())
  title         String
  description   String
  imageUrl      String
  imageWidth    Int
  imageHeight   Int
  startDate     DateTime?
  endDate       DateTime?
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// 후기 모델
model Review {
  id            String    @id @default(cuid())
  name          String
  content       String    @db.Text
  rating        Int
  imageUrl      String?
  imageWidth    Int?
  imageHeight   Int?
  isApproved    Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// 문의 모델
model Contact {
  id            String    @id @default(cuid())
  name          String
  email         String
  phone         String?
  message       String    @db.Text
  isRead        Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// 미디어 모델 (이미지, 비디오 등)
model Media {
  id            String    @id @default(cuid())
  type          String    // image, video
  url           String
  width         Int
  height        Int
  size          Int       // 파일 크기 (바이트)
  mimeType      String
  title         String?
  description   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// 사이트 설정 모델
model Setting {
  id            String    @id @default(cuid())
  key           String    @unique
  value         String    @db.Text
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
